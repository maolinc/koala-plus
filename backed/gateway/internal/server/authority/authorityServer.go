// Code generated by goctl. DO NOT EDIT.
// Source: koala.proto

package server

import (
	"context"

	"koala/gateway/internal/logic/authority"
	"koala/gateway/internal/svc"
	"koala/gateway/pb"
)

type AuthorityServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedAuthorityServer
}

func NewAuthorityServer(svcCtx *svc.ServiceContext) *AuthorityServer {
	return &AuthorityServer{
		svcCtx: svcCtx,
	}
}

func (s *AuthorityServer) Enforce(ctx context.Context, in *pb.PolicyReq) (*pb.BoolRep, error) {
	l := authoritylogic.NewEnforceLogic(ctx, s.svcCtx)
	return l.Enforce(in)
}

func (s *AuthorityServer) BatchEnforce(ctx context.Context, in *pb.RulesReq) (*pb.BoolRep, error) {
	l := authoritylogic.NewBatchEnforceLogic(ctx, s.svcCtx)
	return l.BatchEnforce(in)
}

func (s *AuthorityServer) UserPermsVerify(ctx context.Context, in *pb.UserPermsVerifyReq) (*pb.BoolRep, error) {
	l := authoritylogic.NewUserPermsVerifyLogic(ctx, s.svcCtx)
	return l.UserPermsVerify(in)
}

func (s *AuthorityServer) RoleBind(ctx context.Context, in *pb.RoleBindReq) (*pb.BoolRep, error) {
	l := authoritylogic.NewRoleBindLogic(ctx, s.svcCtx)
	return l.RoleBind(in)
}
