//  goctl gateway protoc koala.proto --go_out=. --go-grpc_out=. --zrpc_out=. -m=true --style=goZero

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: koala.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReq) Reset() {
	*x = EmptyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReq) ProtoMessage() {}

func (x *EmptyReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReq.ProtoReflect.Descriptor instead.
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{0}
}

type EmptyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResp) Reset() {
	*x = EmptyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResp) ProtoMessage() {}

func (x *EmptyResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResp.ProtoReflect.Descriptor instead.
func (*EmptyResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{1}
}

type DeletesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeletesReq) Reset() {
	*x = DeletesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletesReq) ProtoMessage() {}

func (x *DeletesReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletesReq.ProtoReflect.Descriptor instead.
func (*DeletesReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{2}
}

func (x *DeletesReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type UserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Dom    string `protobuf:"bytes,2,opt,name=dom,proto3" json:"dom,omitempty"`
}

func (x *UserReq) Reset() {
	*x = UserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReq) ProtoMessage() {}

func (x *UserReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReq.ProtoReflect.Descriptor instead.
func (*UserReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{3}
}

func (x *UserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserReq) GetDom() string {
	if x != nil {
		return x.Dom
	}
	return ""
}

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Dom string `protobuf:"bytes,2,opt,name=dom,proto3" json:"dom,omitempty"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{4}
}

func (x *IdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IdReq) GetDom() string {
	if x != nil {
		return x.Dom
	}
	return ""
}

type IdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *IdsResp) Reset() {
	*x = IdsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdsResp) ProtoMessage() {}

func (x *IdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdsResp.ProtoReflect.Descriptor instead.
func (*IdsResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{5}
}

func (x *IdsResp) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type PermsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perms string `protobuf:"bytes,1,opt,name=perms,proto3" json:"perms,omitempty"`
}

func (x *PermsReq) Reset() {
	*x = PermsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermsReq) ProtoMessage() {}

func (x *PermsReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermsReq.ProtoReflect.Descriptor instead.
func (*PermsReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{6}
}

func (x *PermsReq) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

type PermsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermsList []string `protobuf:"bytes,1,rep,name=permsList,proto3" json:"permsList,omitempty"`
}

func (x *PermsResp) Reset() {
	*x = PermsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermsResp) ProtoMessage() {}

func (x *PermsResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermsResp.ProtoReflect.Descriptor instead.
func (*PermsResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{7}
}

func (x *PermsResp) GetPermsList() []string {
	if x != nil {
		return x.PermsList
	}
	return nil
}

// -----------------------sys_application-----------------------
type SysApplicationView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          //应用名字
	Des              string `protobuf:"bytes,3,opt,name=des,proto3" json:"des,omitempty"`                            //应用描述
	Perms            string `protobuf:"bytes,4,opt,name=perms,proto3" json:"perms,omitempty"`                        //权限标识
	OrganizationId   int64  `protobuf:"varint,5,opt,name=organizationId,proto3" json:"organizationId,omitempty"`     //组织id
	Status           string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                      //
	CreateTime       int64  `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`             //
	UpdateTime       int64  `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`             //
	DeleteFlag       int64  `protobuf:"varint,9,opt,name=deleteFlag,proto3" json:"deleteFlag,omitempty"`             //
	CreateBy         int64  `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`                //
	CoverUrl         string `protobuf:"bytes,11,opt,name=coverUrl,proto3" json:"coverUrl,omitempty"`                 //封面
	Href             string `protobuf:"bytes,12,opt,name=href,proto3" json:"href,omitempty"`                         //连接地址
	LoginCallbackUrl string `protobuf:"bytes,13,opt,name=loginCallbackUrl,proto3" json:"loginCallbackUrl,omitempty"` //登录回调地址
	AppId            string `protobuf:"bytes,14,opt,name=appId,proto3" json:"appId,omitempty"`                       //appId应用标识
}

func (x *SysApplicationView) Reset() {
	*x = SysApplicationView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysApplicationView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysApplicationView) ProtoMessage() {}

func (x *SysApplicationView) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysApplicationView.ProtoReflect.Descriptor instead.
func (*SysApplicationView) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{8}
}

func (x *SysApplicationView) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysApplicationView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SysApplicationView) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *SysApplicationView) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *SysApplicationView) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *SysApplicationView) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysApplicationView) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *SysApplicationView) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *SysApplicationView) GetDeleteFlag() int64 {
	if x != nil {
		return x.DeleteFlag
	}
	return 0
}

func (x *SysApplicationView) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysApplicationView) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *SysApplicationView) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *SysApplicationView) GetLoginCallbackUrl() string {
	if x != nil {
		return x.LoginCallbackUrl
	}
	return ""
}

func (x *SysApplicationView) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type CreateSysApplicationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                      //应用名字
	Des              string `protobuf:"bytes,3,opt,name=des,proto3" json:"des,omitempty"`                        //应用描述
	OrganizationId   int64  `protobuf:"varint,5,opt,name=organizationId,proto3" json:"organizationId,omitempty"` //组织id
	Status           string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CoverUrl         string `protobuf:"bytes,11,opt,name=coverUrl,proto3" json:"coverUrl,omitempty"`                 //封面
	Href             string `protobuf:"bytes,12,opt,name=href,proto3" json:"href,omitempty"`                         //连接地址
	LoginCallbackUrl string `protobuf:"bytes,13,opt,name=loginCallbackUrl,proto3" json:"loginCallbackUrl,omitempty"` //登录回调地址
}

func (x *CreateSysApplicationReq) Reset() {
	*x = CreateSysApplicationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSysApplicationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysApplicationReq) ProtoMessage() {}

func (x *CreateSysApplicationReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysApplicationReq.ProtoReflect.Descriptor instead.
func (*CreateSysApplicationReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSysApplicationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSysApplicationReq) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *CreateSysApplicationReq) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *CreateSysApplicationReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateSysApplicationReq) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *CreateSysApplicationReq) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *CreateSysApplicationReq) GetLoginCallbackUrl() string {
	if x != nil {
		return x.LoginCallbackUrl
	}
	return ""
}

type CreateSysApplicationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Perms string `protobuf:"bytes,2,opt,name=perms,proto3" json:"perms,omitempty"`
}

func (x *CreateSysApplicationResp) Reset() {
	*x = CreateSysApplicationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSysApplicationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysApplicationResp) ProtoMessage() {}

func (x *CreateSysApplicationResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysApplicationResp.ProtoReflect.Descriptor instead.
func (*CreateSysApplicationResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSysApplicationResp) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreateSysApplicationResp) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

type UpdateSysApplicationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          //应用名字
	Des              string `protobuf:"bytes,3,opt,name=des,proto3" json:"des,omitempty"`                            //应用描述
	Status           string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                      //
	CoverUrl         string `protobuf:"bytes,11,opt,name=coverUrl,proto3" json:"coverUrl,omitempty"`                 //封面
	Href             string `protobuf:"bytes,12,opt,name=href,proto3" json:"href,omitempty"`                         //连接地址
	LoginCallbackUrl string `protobuf:"bytes,13,opt,name=loginCallbackUrl,proto3" json:"loginCallbackUrl,omitempty"` //登录回调地址
}

func (x *UpdateSysApplicationReq) Reset() {
	*x = UpdateSysApplicationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysApplicationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysApplicationReq) ProtoMessage() {}

func (x *UpdateSysApplicationReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysApplicationReq.ProtoReflect.Descriptor instead.
func (*UpdateSysApplicationReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateSysApplicationReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSysApplicationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSysApplicationReq) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *UpdateSysApplicationReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateSysApplicationReq) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *UpdateSysApplicationReq) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *UpdateSysApplicationReq) GetLoginCallbackUrl() string {
	if x != nil {
		return x.LoginCallbackUrl
	}
	return ""
}

type UpdateSysApplicationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysApplicationResp) Reset() {
	*x = UpdateSysApplicationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSysApplicationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysApplicationResp) ProtoMessage() {}

func (x *UpdateSysApplicationResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysApplicationResp.ProtoReflect.Descriptor instead.
func (*UpdateSysApplicationResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{12}
}

type DeleteSysApplicationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //
}

func (x *DeleteSysApplicationReq) Reset() {
	*x = DeleteSysApplicationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysApplicationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysApplicationReq) ProtoMessage() {}

func (x *DeleteSysApplicationReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysApplicationReq.ProtoReflect.Descriptor instead.
func (*DeleteSysApplicationReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteSysApplicationReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSysApplicationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSysApplicationResp) Reset() {
	*x = DeleteSysApplicationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysApplicationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysApplicationResp) ProtoMessage() {}

func (x *DeleteSysApplicationResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysApplicationResp.ProtoReflect.Descriptor instead.
func (*DeleteSysApplicationResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{14}
}

type DetailSysApplicationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //
}

func (x *DetailSysApplicationReq) Reset() {
	*x = DetailSysApplicationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailSysApplicationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailSysApplicationReq) ProtoMessage() {}

func (x *DetailSysApplicationReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailSysApplicationReq.ProtoReflect.Descriptor instead.
func (*DetailSysApplicationReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{15}
}

func (x *DetailSysApplicationReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DetailSysApplicationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                             //
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                          //应用名字
	Des              string `protobuf:"bytes,3,opt,name=des,proto3" json:"des,omitempty"`                            //应用描述
	Perms            string `protobuf:"bytes,4,opt,name=perms,proto3" json:"perms,omitempty"`                        //权限标识
	OrganizationId   int64  `protobuf:"varint,5,opt,name=organizationId,proto3" json:"organizationId,omitempty"`     //组织id
	Status           string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                      //
	CreateTime       string `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`              //
	UpdateTime       string `protobuf:"bytes,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`              //
	CreateBy         int64  `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`                //
	CoverUrl         string `protobuf:"bytes,11,opt,name=coverUrl,proto3" json:"coverUrl,omitempty"`                 //封面
	Href             string `protobuf:"bytes,12,opt,name=href,proto3" json:"href,omitempty"`                         //连接地址
	LoginCallbackUrl string `protobuf:"bytes,13,opt,name=loginCallbackUrl,proto3" json:"loginCallbackUrl,omitempty"` //登录回调地址
	AppId            string `protobuf:"bytes,14,opt,name=appId,proto3" json:"appId,omitempty"`                       //appId应用标识
}

func (x *DetailSysApplicationResp) Reset() {
	*x = DetailSysApplicationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailSysApplicationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailSysApplicationResp) ProtoMessage() {}

func (x *DetailSysApplicationResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailSysApplicationResp.ProtoReflect.Descriptor instead.
func (*DetailSysApplicationResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{16}
}

func (x *DetailSysApplicationResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DetailSysApplicationResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DetailSysApplicationResp) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *DetailSysApplicationResp) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *DetailSysApplicationResp) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *DetailSysApplicationResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DetailSysApplicationResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DetailSysApplicationResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *DetailSysApplicationResp) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *DetailSysApplicationResp) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *DetailSysApplicationResp) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *DetailSysApplicationResp) GetLoginCallbackUrl() string {
	if x != nil {
		return x.LoginCallbackUrl
	}
	return ""
}

func (x *DetailSysApplicationResp) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type SearchSysApplicationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize         int64    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`                 // 每页条数
	PageCurrent      int64    `protobuf:"varint,4,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"`           // 当前页
	OrderSort        []string `protobuf:"bytes,5,rep,name=orderSort,proto3" json:"orderSort,omitempty"`                // 排序 eg： ["create_time asc", "id desc"]
	SearchPlus       string   `protobuf:"bytes,6,opt,name=searchPlus,proto3" json:"searchPlus,omitempty"`              // 加强版搜索参数
	Id               int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`                             //
	Name             string   `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`                          //应用名字
	Des              string   `protobuf:"bytes,10,opt,name=des,proto3" json:"des,omitempty"`                           //应用描述
	Perms            string   `protobuf:"bytes,11,opt,name=perms,proto3" json:"perms,omitempty"`                       //权限标识
	OrganizationId   int64    `protobuf:"varint,12,opt,name=organizationId,proto3" json:"organizationId,omitempty"`    //组织id
	Status           string   `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`                     //
	CreateBy         int64    `protobuf:"varint,17,opt,name=createBy,proto3" json:"createBy,omitempty"`                //
	CoverUrl         string   `protobuf:"bytes,18,opt,name=coverUrl,proto3" json:"coverUrl,omitempty"`                 //封面
	Href             string   `protobuf:"bytes,19,opt,name=href,proto3" json:"href,omitempty"`                         //连接地址
	LoginCallbackUrl string   `protobuf:"bytes,20,opt,name=loginCallbackUrl,proto3" json:"loginCallbackUrl,omitempty"` //登录回调地址
	AppId            string   `protobuf:"bytes,21,opt,name=appId,proto3" json:"appId,omitempty"`                       //appId应用标识
}

func (x *SearchSysApplicationReq) Reset() {
	*x = SearchSysApplicationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysApplicationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysApplicationReq) ProtoMessage() {}

func (x *SearchSysApplicationReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysApplicationReq.ProtoReflect.Descriptor instead.
func (*SearchSysApplicationReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{17}
}

func (x *SearchSysApplicationReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSysApplicationReq) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *SearchSysApplicationReq) GetOrderSort() []string {
	if x != nil {
		return x.OrderSort
	}
	return nil
}

func (x *SearchSysApplicationReq) GetSearchPlus() string {
	if x != nil {
		return x.SearchPlus
	}
	return ""
}

func (x *SearchSysApplicationReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchSysApplicationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchSysApplicationReq) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *SearchSysApplicationReq) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *SearchSysApplicationReq) GetOrganizationId() int64 {
	if x != nil {
		return x.OrganizationId
	}
	return 0
}

func (x *SearchSysApplicationReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SearchSysApplicationReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SearchSysApplicationReq) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *SearchSysApplicationReq) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *SearchSysApplicationReq) GetLoginCallbackUrl() string {
	if x != nil {
		return x.LoginCallbackUrl
	}
	return ""
}

func (x *SearchSysApplicationReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type SearchSysApplicationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PageCurrent int64                 `protobuf:"varint,2,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"`
	PageSize    int64                 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageTotal   int64                 `protobuf:"varint,4,opt,name=pageTotal,proto3" json:"pageTotal,omitempty"`
	List        []*SysApplicationView `protobuf:"bytes,7,rep,name=list,proto3" json:"list,omitempty"` // 列表
}

func (x *SearchSysApplicationResp) Reset() {
	*x = SearchSysApplicationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSysApplicationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSysApplicationResp) ProtoMessage() {}

func (x *SearchSysApplicationResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSysApplicationResp.ProtoReflect.Descriptor instead.
func (*SearchSysApplicationResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{18}
}

func (x *SearchSysApplicationResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchSysApplicationResp) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *SearchSysApplicationResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchSysApplicationResp) GetPageTotal() int64 {
	if x != nil {
		return x.PageTotal
	}
	return 0
}

func (x *SearchSysApplicationResp) GetList() []*SysApplicationView {
	if x != nil {
		return x.List
	}
	return nil
}

type DeptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64      `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`              // 部门id
	ParentId  int64      `protobuf:"varint,2,opt,name=ParentId,proto3" json:"ParentId,omitempty"`  // 父部门id
	Ancestors string     `protobuf:"bytes,3,opt,name=Ancestors,proto3" json:"Ancestors,omitempty"` // 祖级列表
	DeptName  string     `protobuf:"bytes,4,opt,name=DeptName,proto3" json:"DeptName,omitempty"`   // 部门名称
	OrderNum  int64      `protobuf:"varint,5,opt,name=OrderNum,proto3" json:"OrderNum,omitempty"`  // 显示顺序
	Leader    string     `protobuf:"bytes,6,opt,name=Leader,proto3" json:"Leader,omitempty"`       // 负责人
	Phone     string     `protobuf:"bytes,7,opt,name=Phone,proto3" json:"Phone,omitempty"`         // 联系电话
	Email     string     `protobuf:"bytes,8,opt,name=Email,proto3" json:"Email,omitempty"`         // 邮箱
	Status    string     `protobuf:"bytes,9,opt,name=Status,proto3" json:"Status,omitempty"`       // 部门状态（0正常 1停用）
	Children  []*DeptReq `protobuf:"bytes,10,rep,name=Children,proto3" json:"Children,omitempty"`  // 备注
	Perms     string     `protobuf:"bytes,11,opt,name=perms,proto3" json:"perms,omitempty"`
	AppId     int64      `protobuf:"varint,12,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *DeptReq) Reset() {
	*x = DeptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptReq) ProtoMessage() {}

func (x *DeptReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptReq.ProtoReflect.Descriptor instead.
func (*DeptReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{19}
}

func (x *DeptReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeptReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *DeptReq) GetAncestors() string {
	if x != nil {
		return x.Ancestors
	}
	return ""
}

func (x *DeptReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptReq) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *DeptReq) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *DeptReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *DeptReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeptReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeptReq) GetChildren() []*DeptReq {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *DeptReq) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *DeptReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type DeptQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    int64    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`       // 每页条数
	PageCurrent int64    `protobuf:"varint,4,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"` // 当前页
	OrderSort   []string `protobuf:"bytes,5,rep,name=orderSort,proto3" json:"orderSort,omitempty"`      // 排序 eg： ["create_time asc", "id desc"]
	SearchPlus  string   `protobuf:"bytes,6,opt,name=searchPlus,proto3" json:"searchPlus,omitempty"`    // 加强版搜索参数
	OpenTree    bool     `protobuf:"varint,7,opt,name=openTree,proto3" json:"openTree,omitempty"`
	AppId       int64    `protobuf:"varint,8,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *DeptQueryReq) Reset() {
	*x = DeptQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptQueryReq) ProtoMessage() {}

func (x *DeptQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptQueryReq.ProtoReflect.Descriptor instead.
func (*DeptQueryReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{20}
}

func (x *DeptQueryReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DeptQueryReq) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *DeptQueryReq) GetOrderSort() []string {
	if x != nil {
		return x.OrderSort
	}
	return nil
}

func (x *DeptQueryReq) GetSearchPlus() string {
	if x != nil {
		return x.SearchPlus
	}
	return ""
}

func (x *DeptQueryReq) GetOpenTree() bool {
	if x != nil {
		return x.OpenTree
	}
	return false
}

func (x *DeptQueryReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type DeptListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List        []*DeptReq `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total       int64      `protobuf:"varint,20,opt,name=total,proto3" json:"total,omitempty"`
	PageCurrent int64      `protobuf:"varint,21,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"`
	PageSize    int64      `protobuf:"varint,22,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageTotal   int64      `protobuf:"varint,23,opt,name=pageTotal,proto3" json:"pageTotal,omitempty"`
}

func (x *DeptListResp) Reset() {
	*x = DeptListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListResp) ProtoMessage() {}

func (x *DeptListResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListResp.ProtoReflect.Descriptor instead.
func (*DeptListResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{21}
}

func (x *DeptListResp) GetList() []*DeptReq {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DeptListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DeptListResp) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *DeptListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DeptListResp) GetPageTotal() int64 {
	if x != nil {
		return x.PageTotal
	}
	return 0
}

type PostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`             // 岗位ID
	PostCode string `protobuf:"bytes,2,opt,name=PostCode,proto3" json:"PostCode,omitempty"`  // 岗位编码
	PostName string `protobuf:"bytes,3,opt,name=PostName,proto3" json:"PostName,omitempty"`  // 岗位名称
	PostSort int64  `protobuf:"varint,4,opt,name=PostSort,proto3" json:"PostSort,omitempty"` // 显示顺序
	Status   string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`      // 状态（0正常 1停用）
	Remark   string `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark,omitempty"`      // 备注
}

func (x *PostReq) Reset() {
	*x = PostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostReq) ProtoMessage() {}

func (x *PostReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostReq.ProtoReflect.Descriptor instead.
func (*PostReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{22}
}

func (x *PostReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostReq) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *PostReq) GetPostName() string {
	if x != nil {
		return x.PostName
	}
	return ""
}

func (x *PostReq) GetPostSort() int64 {
	if x != nil {
		return x.PostSort
	}
	return 0
}

func (x *PostReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PostReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type PostQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    int64    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`       // 每页条数
	PageCurrent int64    `protobuf:"varint,4,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"` // 当前页
	OrderSort   []string `protobuf:"bytes,5,rep,name=orderSort,proto3" json:"orderSort,omitempty"`      // 排序 eg： ["create_time asc", "id desc"]
	SearchPlus  string   `protobuf:"bytes,6,opt,name=searchPlus,proto3" json:"searchPlus,omitempty"`    // 加强版搜索参数
	AppId       int64    `protobuf:"varint,8,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *PostQueryReq) Reset() {
	*x = PostQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostQueryReq) ProtoMessage() {}

func (x *PostQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostQueryReq.ProtoReflect.Descriptor instead.
func (*PostQueryReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{23}
}

func (x *PostQueryReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PostQueryReq) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *PostQueryReq) GetOrderSort() []string {
	if x != nil {
		return x.OrderSort
	}
	return nil
}

func (x *PostQueryReq) GetSearchPlus() string {
	if x != nil {
		return x.SearchPlus
	}
	return ""
}

func (x *PostQueryReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type PostListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List        []*RoleReq `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total       int64      `protobuf:"varint,20,opt,name=total,proto3" json:"total,omitempty"`
	PageCurrent int64      `protobuf:"varint,21,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"`
	PageSize    int64      `protobuf:"varint,22,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageTotal   int64      `protobuf:"varint,23,opt,name=pageTotal,proto3" json:"pageTotal,omitempty"`
}

func (x *PostListResp) Reset() {
	*x = PostListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostListResp) ProtoMessage() {}

func (x *PostListResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostListResp.ProtoReflect.Descriptor instead.
func (*PostListResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{24}
}

func (x *PostListResp) GetList() []*RoleReq {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *PostListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PostListResp) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *PostListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PostListResp) GetPageTotal() int64 {
	if x != nil {
		return x.PageTotal
	}
	return 0
}

type RoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              // 角色ID
	ParentId  int64      `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`  // 父角色
	RoleName  string     `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName,omitempty"`   // 角色名称
	Perms     string     `protobuf:"bytes,4,opt,name=perms,proto3" json:"perms,omitempty"`         // 角色权限字符串
	RoleSort  int64      `protobuf:"varint,5,opt,name=roleSort,proto3" json:"roleSort,omitempty"`  // 显示顺序
	DataScope string     `protobuf:"bytes,6,opt,name=dataScope,proto3" json:"dataScope,omitempty"` // 数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	Status    string     `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`       // 角色状态（0正常 1停用）
	Remark    string     `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`       // 备注
	Children  []*RoleReq `protobuf:"bytes,9,rep,name=children,proto3" json:"children,omitempty"`
	MenuPerms []string   `protobuf:"bytes,15,rep,name=menuPerms,proto3" json:"menuPerms,omitempty"` // 分配的菜单权限
	AppId     int64      `protobuf:"varint,10,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *RoleReq) Reset() {
	*x = RoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleReq) ProtoMessage() {}

func (x *RoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleReq.ProtoReflect.Descriptor instead.
func (*RoleReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{25}
}

func (x *RoleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *RoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleReq) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *RoleReq) GetRoleSort() int64 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *RoleReq) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *RoleReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RoleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleReq) GetChildren() []*RoleReq {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *RoleReq) GetMenuPerms() []string {
	if x != nil {
		return x.MenuPerms
	}
	return nil
}

func (x *RoleReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type RoleQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    int64    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`       // 每页条数
	PageCurrent int64    `protobuf:"varint,4,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"` // 当前页
	OrderSort   []string `protobuf:"bytes,5,rep,name=orderSort,proto3" json:"orderSort,omitempty"`      // 排序 eg： ["create_time asc", "id desc"]
	SearchPlus  string   `protobuf:"bytes,6,opt,name=searchPlus,proto3" json:"searchPlus,omitempty"`    // 加强版搜索参数
	OpenTree    bool     `protobuf:"varint,7,opt,name=openTree,proto3" json:"openTree,omitempty"`
	AppId       int64    `protobuf:"varint,8,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *RoleQueryReq) Reset() {
	*x = RoleQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleQueryReq) ProtoMessage() {}

func (x *RoleQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleQueryReq.ProtoReflect.Descriptor instead.
func (*RoleQueryReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{26}
}

func (x *RoleQueryReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoleQueryReq) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *RoleQueryReq) GetOrderSort() []string {
	if x != nil {
		return x.OrderSort
	}
	return nil
}

func (x *RoleQueryReq) GetSearchPlus() string {
	if x != nil {
		return x.SearchPlus
	}
	return ""
}

func (x *RoleQueryReq) GetOpenTree() bool {
	if x != nil {
		return x.OpenTree
	}
	return false
}

func (x *RoleQueryReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type RoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List        []*RoleReq `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total       int64      `protobuf:"varint,20,opt,name=total,proto3" json:"total,omitempty"`
	PageCurrent int64      `protobuf:"varint,21,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"`
	PageSize    int64      `protobuf:"varint,22,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageTotal   int64      `protobuf:"varint,23,opt,name=pageTotal,proto3" json:"pageTotal,omitempty"`
}

func (x *RoleListResp) Reset() {
	*x = RoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListResp) ProtoMessage() {}

func (x *RoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListResp.ProtoReflect.Descriptor instead.
func (*RoleListResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{27}
}

func (x *RoleListResp) GetList() []*RoleReq {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RoleListResp) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *RoleListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoleListResp) GetPageTotal() int64 {
	if x != nil {
		return x.PageTotal
	}
	return 0
}

type ApiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`        // 菜单ID
	Des      string `protobuf:"bytes,2,opt,name=des,proto3" json:"des,omitempty"`       // 描述
	Path     string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`     // 路径
	Group    string `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`   // 分组
	Status   string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // 菜单状态（0正常 1停用）
	Method   string `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"`
	Perms    string `protobuf:"bytes,7,opt,name=perms,proto3" json:"perms,omitempty"`
	CreateBy string `protobuf:"bytes,19,opt,name=createBy,proto3" json:"createBy,omitempty"` // 创建者
	UpdateBy string `protobuf:"bytes,16,opt,name=updateBy,proto3" json:"updateBy,omitempty"` // 更新者
	Remark   string `protobuf:"bytes,17,opt,name=remark,proto3" json:"remark,omitempty"`     // 备注
	AppId    int64  `protobuf:"varint,8,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *ApiReq) Reset() {
	*x = ApiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiReq) ProtoMessage() {}

func (x *ApiReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiReq.ProtoReflect.Descriptor instead.
func (*ApiReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{28}
}

func (x *ApiReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApiReq) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *ApiReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApiReq) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ApiReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiReq) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *ApiReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *ApiReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *ApiReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ApiReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type ApiQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    int64    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`       // 每页条数
	PageCurrent int64    `protobuf:"varint,4,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"` // 当前页
	OrderSort   []string `protobuf:"bytes,5,rep,name=orderSort,proto3" json:"orderSort,omitempty"`      // 排序 eg： ["create_time asc", "id desc"]
	SearchPlus  string   `protobuf:"bytes,6,opt,name=searchPlus,proto3" json:"searchPlus,omitempty"`    // 加强版搜索参数
	AppId       int64    `protobuf:"varint,8,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *ApiQueryReq) Reset() {
	*x = ApiQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiQueryReq) ProtoMessage() {}

func (x *ApiQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiQueryReq.ProtoReflect.Descriptor instead.
func (*ApiQueryReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{29}
}

func (x *ApiQueryReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ApiQueryReq) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *ApiQueryReq) GetOrderSort() []string {
	if x != nil {
		return x.OrderSort
	}
	return nil
}

func (x *ApiQueryReq) GetSearchPlus() string {
	if x != nil {
		return x.SearchPlus
	}
	return ""
}

func (x *ApiQueryReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type ApiListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List        []*ApiReq `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total       int64     `protobuf:"varint,20,opt,name=total,proto3" json:"total,omitempty"`
	PageCurrent int64     `protobuf:"varint,21,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"`
	PageSize    int64     `protobuf:"varint,22,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageTotal   int64     `protobuf:"varint,23,opt,name=pageTotal,proto3" json:"pageTotal,omitempty"`
}

func (x *ApiListResp) Reset() {
	*x = ApiListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiListResp) ProtoMessage() {}

func (x *ApiListResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiListResp.ProtoReflect.Descriptor instead.
func (*ApiListResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{30}
}

func (x *ApiListResp) GetList() []*ApiReq {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ApiListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ApiListResp) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *ApiListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ApiListResp) GetPageTotal() int64 {
	if x != nil {
		return x.PageTotal
	}
	return 0
}

type MenuQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    int64    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`       // 每页条数
	PageCurrent int64    `protobuf:"varint,4,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"` // 当前页
	OrderSort   []string `protobuf:"bytes,5,rep,name=orderSort,proto3" json:"orderSort,omitempty"`      // 排序 eg： ["create_time asc", "id desc"]
	SearchPlus  string   `protobuf:"bytes,6,opt,name=searchPlus,proto3" json:"searchPlus,omitempty"`    // 加强版搜索参数
	AppId       int64    `protobuf:"varint,8,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *MenuQueryReq) Reset() {
	*x = MenuQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuQueryReq) ProtoMessage() {}

func (x *MenuQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuQueryReq.ProtoReflect.Descriptor instead.
func (*MenuQueryReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{31}
}

func (x *MenuQueryReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MenuQueryReq) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *MenuQueryReq) GetOrderSort() []string {
	if x != nil {
		return x.OrderSort
	}
	return nil
}

func (x *MenuQueryReq) GetSearchPlus() string {
	if x != nil {
		return x.SearchPlus
	}
	return ""
}

func (x *MenuQueryReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type MenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MenuName          string     `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`   // 菜单名称
	ParentId          int64      `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`  // 父菜单ID
	OrderNo           int64      `protobuf:"varint,4,opt,name=orderNo,proto3" json:"orderNo,omitempty"`    // 显示顺序
	Path              string     `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`           // 路由地址
	Component         string     `protobuf:"bytes,6,opt,name=component,proto3" json:"component,omitempty"` // 组件路径
	Redirect          string     `protobuf:"bytes,18,opt,name=Redirect,proto3" json:"Redirect,omitempty"`  // 重定向
	Query             string     `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`         // 路由参数
	IsFrame           int64      `protobuf:"varint,8,opt,name=IsFrame,proto3" json:"IsFrame,omitempty"`    // 是否为外链（0是 1否）
	IsCache           int64      `protobuf:"varint,9,opt,name=IsCache,proto3" json:"IsCache,omitempty"`    // 是否缓存（0缓存 1不缓存）
	MenuType          string     `protobuf:"bytes,10,opt,name=menuType,proto3" json:"menuType,omitempty"`  // 菜单类型（M目录 C菜单 F按钮）
	Visible           string     `protobuf:"bytes,11,opt,name=visible,proto3" json:"visible,omitempty"`    // 菜单状态（0显示 1隐藏）
	Status            string     `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`      // 菜单状态（0正常 1停用）
	Perms             string     `protobuf:"bytes,13,opt,name=perms,proto3" json:"perms,omitempty"`        // 权限标识
	Icon              string     `protobuf:"bytes,14,opt,name=icon,proto3" json:"icon,omitempty"`          // 菜单图标
	CreateBy          string     `protobuf:"bytes,19,opt,name=createBy,proto3" json:"createBy,omitempty"`  // 创建者
	UpdateBy          string     `protobuf:"bytes,16,opt,name=updateBy,proto3" json:"updateBy,omitempty"`  // 更新者
	Remark            string     `protobuf:"bytes,17,opt,name=remark,proto3" json:"remark,omitempty"`      // 备注
	CurrentActiveMenu string     `protobuf:"bytes,20,opt,name=currentActiveMenu,proto3" json:"currentActiveMenu,omitempty"`
	Children          []*MenuReq `protobuf:"bytes,15,rep,name=children,proto3" json:"children,omitempty"` //子菜单
	AppId             int64      `protobuf:"varint,21,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *MenuReq) Reset() {
	*x = MenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuReq) ProtoMessage() {}

func (x *MenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuReq.ProtoReflect.Descriptor instead.
func (*MenuReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{32}
}

func (x *MenuReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *MenuReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuReq) GetOrderNo() int64 {
	if x != nil {
		return x.OrderNo
	}
	return 0
}

func (x *MenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuReq) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuReq) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *MenuReq) GetIsFrame() int64 {
	if x != nil {
		return x.IsFrame
	}
	return 0
}

func (x *MenuReq) GetIsCache() int64 {
	if x != nil {
		return x.IsCache
	}
	return 0
}

func (x *MenuReq) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *MenuReq) GetVisible() string {
	if x != nil {
		return x.Visible
	}
	return ""
}

func (x *MenuReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MenuReq) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *MenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuReq) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *MenuReq) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *MenuReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MenuReq) GetCurrentActiveMenu() string {
	if x != nil {
		return x.CurrentActiveMenu
	}
	return ""
}

func (x *MenuReq) GetChildren() []*MenuReq {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *MenuReq) GetAppId() int64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

type MenusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus []*MenuReq `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *MenusResp) Reset() {
	*x = MenusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenusResp) ProtoMessage() {}

func (x *MenusResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenusResp.ProtoReflect.Descriptor instead.
func (*MenusResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{33}
}

func (x *MenusResp) GetMenus() []*MenuReq {
	if x != nil {
		return x.Menus
	}
	return nil
}

type UserMenusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus []*MenusListResp `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *UserMenusResp) Reset() {
	*x = UserMenusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMenusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMenusResp) ProtoMessage() {}

func (x *UserMenusResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMenusResp.ProtoReflect.Descriptor instead.
func (*UserMenusResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{34}
}

func (x *UserMenusResp) GetMenus() []*MenusListResp {
	if x != nil {
		return x.Menus
	}
	return nil
}

type MenusListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`              // 菜单ID
	Name      string                  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`           // 菜单名称
	ParentId  int64                   `protobuf:"varint,3,opt,name=ParentId,proto3" json:"ParentId,omitempty"`  // 父菜单ID
	Path      string                  `protobuf:"bytes,4,opt,name=Path,proto3" json:"Path,omitempty"`           // 路由地址
	Component string                  `protobuf:"bytes,5,opt,name=Component,proto3" json:"Component,omitempty"` // 组件路径
	Redirect  string                  `protobuf:"bytes,6,opt,name=Redirect,proto3" json:"Redirect,omitempty"`   // 重定向
	Perms     string                  `protobuf:"bytes,7,opt,name=Perms,proto3" json:"Perms,omitempty"`         // 权限标识
	Meta      *MenusListResp_MenuMeta `protobuf:"bytes,8,opt,name=Meta,proto3" json:"Meta,omitempty"`
	Children  []*MenusListResp        `protobuf:"bytes,9,rep,name=Children,proto3" json:"Children,omitempty"` // 子菜单
}

func (x *MenusListResp) Reset() {
	*x = MenusListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenusListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenusListResp) ProtoMessage() {}

func (x *MenusListResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenusListResp.ProtoReflect.Descriptor instead.
func (*MenusListResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{35}
}

func (x *MenusListResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenusListResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenusListResp) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenusListResp) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenusListResp) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenusListResp) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenusListResp) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *MenusListResp) GetMeta() *MenusListResp_MenuMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *MenusListResp) GetChildren() []*MenusListResp {
	if x != nil {
		return x.Children
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"` // 用户账号
	NickName string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"` // 用户昵称
	UserType string `protobuf:"bytes,4,opt,name=userType,proto3" json:"userType,omitempty"` // 用户类型（00系统用户）
	Email    string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`       // 用户邮箱
	Phone    string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`       // 手机号码
	Sex      string `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex,omitempty"`           // 用户性别（0男 1女 2未知）
	Avatar   string `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像地址
	Status   string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`    // 帐号状态（0正常 1停用）
	Remark   string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`    // 备注
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{36}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *User) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *User) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type AccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                 // 用户id
	UserName   string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`      // 用户账号
	NickName   string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`      // 用户昵称
	UserType   string `protobuf:"bytes,4,opt,name=userType,proto3" json:"userType,omitempty"`      // 用户类型（00系统用户）
	Email      string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`            // 用户邮箱
	Phone      string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`            // 手机号码
	Sex        string `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex,omitempty"`                // 用户性别（0男 1女 2未知）
	Avatar     string `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`          // 头像地址
	Status     string `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`         // 帐号状态（0正常 1停用）
	Remark     string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`         // 备注
	Password   string `protobuf:"bytes,16,opt,name=password,proto3" json:"password,omitempty"`     //密码
	CreateTime string `protobuf:"bytes,17,opt,name=createTime,proto3" json:"createTime,omitempty"` //创建时间
}

func (x *AccountReq) Reset() {
	*x = AccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountReq) ProtoMessage() {}

func (x *AccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountReq.ProtoReflect.Descriptor instead.
func (*AccountReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{37}
}

func (x *AccountReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AccountReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *AccountReq) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *AccountReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AccountReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AccountReq) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *AccountReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AccountReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AccountReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AccountReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AccountReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type AccountQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize    int64    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`       // 每页条数
	PageCurrent int64    `protobuf:"varint,4,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"` // 当前页
	OrderSort   []string `protobuf:"bytes,5,rep,name=orderSort,proto3" json:"orderSort,omitempty"`      // 排序 eg： ["create_time asc", "id desc"]
	SearchPlus  string   `protobuf:"bytes,6,opt,name=searchPlus,proto3" json:"searchPlus,omitempty"`    // 加强版搜索参数
	DeptIds     []int64  `protobuf:"varint,7,rep,packed,name=DeptIds,proto3" json:"DeptIds,omitempty"`
}

func (x *AccountQueryReq) Reset() {
	*x = AccountQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountQueryReq) ProtoMessage() {}

func (x *AccountQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountQueryReq.ProtoReflect.Descriptor instead.
func (*AccountQueryReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{38}
}

func (x *AccountQueryReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AccountQueryReq) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *AccountQueryReq) GetOrderSort() []string {
	if x != nil {
		return x.OrderSort
	}
	return nil
}

func (x *AccountQueryReq) GetSearchPlus() string {
	if x != nil {
		return x.SearchPlus
	}
	return ""
}

func (x *AccountQueryReq) GetDeptIds() []int64 {
	if x != nil {
		return x.DeptIds
	}
	return nil
}

type AccountListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List        []*GetUserInfoResp `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total       int64              `protobuf:"varint,20,opt,name=total,proto3" json:"total,omitempty"`
	PageCurrent int64              `protobuf:"varint,21,opt,name=pageCurrent,proto3" json:"pageCurrent,omitempty"`
	PageSize    int64              `protobuf:"varint,22,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PageTotal   int64              `protobuf:"varint,23,opt,name=pageTotal,proto3" json:"pageTotal,omitempty"`
}

func (x *AccountListResp) Reset() {
	*x = AccountListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountListResp) ProtoMessage() {}

func (x *AccountListResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountListResp.ProtoReflect.Descriptor instead.
func (*AccountListResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{39}
}

func (x *AccountListResp) GetList() []*GetUserInfoResp {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AccountListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AccountListResp) GetPageCurrent() int64 {
	if x != nil {
		return x.PageCurrent
	}
	return 0
}

func (x *AccountListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AccountListResp) GetPageTotal() int64 {
	if x != nil {
		return x.PageTotal
	}
	return 0
}

type UpdatePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	PasswordOld string `protobuf:"bytes,1,opt,name=passwordOld,proto3" json:"passwordOld,omitempty"`
	PasswordNew string `protobuf:"bytes,2,opt,name=passwordNew,proto3" json:"passwordNew,omitempty"`
}

func (x *UpdatePasswordReq) Reset() {
	*x = UpdatePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordReq) ProtoMessage() {}

func (x *UpdatePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordReq.ProtoReflect.Descriptor instead.
func (*UpdatePasswordReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{40}
}

func (x *UpdatePasswordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdatePasswordReq) GetPasswordOld() string {
	if x != nil {
		return x.PasswordOld
	}
	return ""
}

func (x *UpdatePasswordReq) GetPasswordNew() string {
	if x != nil {
		return x.PasswordNew
	}
	return ""
}

type ResetPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *ResetPasswordReq) Reset() {
	*x = ResetPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordReq) ProtoMessage() {}

func (x *ResetPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordReq.ProtoReflect.Descriptor instead.
func (*ResetPasswordReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{41}
}

func (x *ResetPasswordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ResetPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"` // 用户账号
	NickName string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"` // 用户昵称
	UserType string `protobuf:"bytes,4,opt,name=userType,proto3" json:"userType,omitempty"` // 用户类型（00系统用户）
	Email    string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`       // 用户邮箱
	Phone    string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`       // 手机号码
	Sex      string `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex,omitempty"`           // 用户性别（0男 1女 2未知）
	Avatar   string `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`     // 头像地址
	Password string `protobuf:"bytes,9,opt,name=password,proto3" json:"password,omitempty"` // 密码
	Status   int64  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`   // 帐号状态（0正常 1停用）
	Remark   string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`    // 备注
	DeptId   int64  `protobuf:"varint,12,opt,name=deptId,proto3" json:"deptId,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{42}
}

func (x *RegisterReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RegisterReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *RegisterReq) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *RegisterReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *RegisterReq) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *RegisterReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *RegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RegisterReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RegisterReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	AccessExpire int64  `protobuf:"varint,2,opt,name=accessExpire,proto3" json:"accessExpire,omitempty"`
	RefreshAfter int64  `protobuf:"varint,3,opt,name=refreshAfter,proto3" json:"refreshAfter,omitempty"`
	Id           int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{43}
}

func (x *RegisterResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RegisterResp) GetAccessExpire() int64 {
	if x != nil {
		return x.AccessExpire
	}
	return 0
}

func (x *RegisterResp) GetRefreshAfter() int64 {
	if x != nil {
		return x.RefreshAfter
	}
	return 0
}

func (x *RegisterResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthType string `protobuf:"bytes,1,opt,name=authType,proto3" json:"authType,omitempty"`
	AuthKey  string `protobuf:"bytes,2,opt,name=authKey,proto3" json:"authKey,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{44}
}

func (x *LoginReq) GetAuthType() string {
	if x != nil {
		return x.AuthType
	}
	return ""
}

func (x *LoginReq) GetAuthKey() string {
	if x != nil {
		return x.AuthKey
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	AccessExpire int64  `protobuf:"varint,2,opt,name=accessExpire,proto3" json:"accessExpire,omitempty"`
	RefreshAfter int64  `protobuf:"varint,3,opt,name=refreshAfter,proto3" json:"refreshAfter,omitempty"`
}

func (x *LoginResp) Reset() {
	*x = LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResp) ProtoMessage() {}

func (x *LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResp.ProtoReflect.Descriptor instead.
func (*LoginResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{45}
}

func (x *LoginResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResp) GetAccessExpire() int64 {
	if x != nil {
		return x.AccessExpire
	}
	return 0
}

func (x *LoginResp) GetRefreshAfter() int64 {
	if x != nil {
		return x.RefreshAfter
	}
	return 0
}

type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AppId  string `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	Role   bool   `protobuf:"varint,3,opt,name=role,proto3" json:"role,omitempty"`
	Dept   bool   `protobuf:"varint,4,opt,name=dept,proto3" json:"dept,omitempty"`
	Post   bool   `protobuf:"varint,5,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{46}
}

func (x *GetUserInfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserInfoReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetUserInfoReq) GetRole() bool {
	if x != nil {
		return x.Role
	}
	return false
}

func (x *GetUserInfoReq) GetDept() bool {
	if x != nil {
		return x.Dept
	}
	return false
}

func (x *GetUserInfoReq) GetPost() bool {
	if x != nil {
		return x.Post
	}
	return false
}

type GetUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *AccountReq       `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	AppId string            `protobuf:"bytes,2,opt,name=appId,proto3" json:"appId,omitempty"`
	Dept  []*DeptReq        `protobuf:"bytes,3,rep,name=dept,proto3" json:"dept,omitempty"`
	Post  []*PostReq        `protobuf:"bytes,4,rep,name=post,proto3" json:"post,omitempty"`
	Role  []*RolePermission `protobuf:"bytes,5,rep,name=role,proto3" json:"role,omitempty"`
}

func (x *GetUserInfoResp) Reset() {
	*x = GetUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResp) ProtoMessage() {}

func (x *GetUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResp.ProtoReflect.Descriptor instead.
func (*GetUserInfoResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{47}
}

func (x *GetUserInfoResp) GetUser() *AccountReq {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetUserInfoResp) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetUserInfoResp) GetDept() []*DeptReq {
	if x != nil {
		return x.Dept
	}
	return nil
}

func (x *GetUserInfoResp) GetPost() []*PostReq {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *GetUserInfoResp) GetRole() []*RolePermission {
	if x != nil {
		return x.Role
	}
	return nil
}

type GenerateTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GenerateTokenReq) Reset() {
	*x = GenerateTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenReq) ProtoMessage() {}

func (x *GenerateTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenReq.ProtoReflect.Descriptor instead.
func (*GenerateTokenReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{48}
}

func (x *GenerateTokenReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GenerateTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	AccessExpire int64  `protobuf:"varint,2,opt,name=accessExpire,proto3" json:"accessExpire,omitempty"`
	RefreshAfter int64  `protobuf:"varint,3,opt,name=refreshAfter,proto3" json:"refreshAfter,omitempty"`
}

func (x *GenerateTokenResp) Reset() {
	*x = GenerateTokenResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenResp) ProtoMessage() {}

func (x *GenerateTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenResp.ProtoReflect.Descriptor instead.
func (*GenerateTokenResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{49}
}

func (x *GenerateTokenResp) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GenerateTokenResp) GetAccessExpire() int64 {
	if x != nil {
		return x.AccessExpire
	}
	return 0
}

func (x *GenerateTokenResp) GetRefreshAfter() int64 {
	if x != nil {
		return x.RefreshAfter
	}
	return 0
}

type UserPermsVerifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dom   string                `protobuf:"bytes,2,opt,name=dom,proto3" json:"dom,omitempty"`
	User  string                `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Obj   string                `protobuf:"bytes,4,opt,name=obj,proto3" json:"obj,omitempty"`
	Act   string                `protobuf:"bytes,5,opt,name=act,proto3" json:"act,omitempty"`
	Batch []*UserPermsVerifyReq `protobuf:"bytes,6,rep,name=batch,proto3" json:"batch,omitempty"`
}

func (x *UserPermsVerifyReq) Reset() {
	*x = UserPermsVerifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermsVerifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermsVerifyReq) ProtoMessage() {}

func (x *UserPermsVerifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermsVerifyReq.ProtoReflect.Descriptor instead.
func (*UserPermsVerifyReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{50}
}

func (x *UserPermsVerifyReq) GetDom() string {
	if x != nil {
		return x.Dom
	}
	return ""
}

func (x *UserPermsVerifyReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UserPermsVerifyReq) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *UserPermsVerifyReq) GetAct() string {
	if x != nil {
		return x.Act
	}
	return ""
}

func (x *UserPermsVerifyReq) GetBatch() []*UserPermsVerifyReq {
	if x != nil {
		return x.Batch
	}
	return nil
}

type RoleBindReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string         `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Dom    string         `protobuf:"bytes,2,opt,name=dom,proto3" json:"dom,omitempty"`
	Role   string         `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Obj    string         `protobuf:"bytes,4,opt,name=obj,proto3" json:"obj,omitempty"`
	Act    string         `protobuf:"bytes,5,opt,name=act,proto3" json:"act,omitempty"`
	Batch  []*RoleBindReq `protobuf:"bytes,6,rep,name=batch,proto3" json:"batch,omitempty"`
}

func (x *RoleBindReq) Reset() {
	*x = RoleBindReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBindReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBindReq) ProtoMessage() {}

func (x *RoleBindReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBindReq.ProtoReflect.Descriptor instead.
func (*RoleBindReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{51}
}

func (x *RoleBindReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RoleBindReq) GetDom() string {
	if x != nil {
		return x.Dom
	}
	return ""
}

func (x *RoleBindReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RoleBindReq) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *RoleBindReq) GetAct() string {
	if x != nil {
		return x.Act
	}
	return ""
}

func (x *RoleBindReq) GetBatch() []*RoleBindReq {
	if x != nil {
		return x.Batch
	}
	return nil
}

type RolePermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RolePerms   string        `protobuf:"bytes,1,opt,name=rolePerms,proto3" json:"rolePerms,omitempty"`
	RoleName    string        `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	RoleDes     string        `protobuf:"bytes,3,opt,name=roleDes,proto3" json:"roleDes,omitempty"`
	RoleGroup   string        `protobuf:"bytes,4,opt,name=roleGroup,proto3" json:"roleGroup,omitempty"`
	CreateTime  string        `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	AppPerms    string        `protobuf:"bytes,6,opt,name=appPerms,proto3" json:"appPerms,omitempty"`
	Permissions []*Permission `protobuf:"bytes,7,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *RolePermission) Reset() {
	*x = RolePermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermission) ProtoMessage() {}

func (x *RolePermission) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermission.ProtoReflect.Descriptor instead.
func (*RolePermission) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{52}
}

func (x *RolePermission) GetRolePerms() string {
	if x != nil {
		return x.RolePerms
	}
	return ""
}

func (x *RolePermission) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RolePermission) GetRoleDes() string {
	if x != nil {
		return x.RoleDes
	}
	return ""
}

func (x *RolePermission) GetRoleGroup() string {
	if x != nil {
		return x.RoleGroup
	}
	return ""
}

func (x *RolePermission) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RolePermission) GetAppPerms() string {
	if x != nil {
		return x.AppPerms
	}
	return ""
}

func (x *RolePermission) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perms      string `protobuf:"bytes,1,opt,name=perms,proto3" json:"perms,omitempty"`
	AppPerms   string `protobuf:"bytes,2,opt,name=appPerms,proto3" json:"appPerms,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Des        string `protobuf:"bytes,4,opt,name=des,proto3" json:"des,omitempty"`
	Group      string `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	CreateTime string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
	RoleName   string `protobuf:"bytes,7,opt,name=roleName,proto3" json:"roleName,omitempty"`
	RolePerms  string `protobuf:"bytes,8,opt,name=rolePerms,proto3" json:"rolePerms,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{53}
}

func (x *Permission) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *Permission) GetAppPerms() string {
	if x != nil {
		return x.AppPerms
	}
	return ""
}

func (x *Permission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Permission) GetDes() string {
	if x != nil {
		return x.Des
	}
	return ""
}

func (x *Permission) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Permission) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *Permission) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *Permission) GetRolePerms() string {
	if x != nil {
		return x.RolePerms
	}
	return ""
}

type QueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomId int64 `protobuf:"varint,2,opt,name=domId,proto3" json:"domId,omitempty"`
}

func (x *QueryReq) Reset() {
	*x = QueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReq) ProtoMessage() {}

func (x *QueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReq.ProtoReflect.Descriptor instead.
func (*QueryReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{54}
}

func (x *QueryReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryReq) GetDomId() int64 {
	if x != nil {
		return x.DomId
	}
	return 0
}

type PolicyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ptype string   `protobuf:"bytes,1,opt,name=Ptype,proto3" json:"Ptype,omitempty"` // p g g2
	Index int32    `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	Rule  []string `protobuf:"bytes,3,rep,name=Rule,proto3" json:"Rule,omitempty"`
}

func (x *PolicyReq) Reset() {
	*x = PolicyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyReq) ProtoMessage() {}

func (x *PolicyReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyReq.ProtoReflect.Descriptor instead.
func (*PolicyReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{55}
}

func (x *PolicyReq) GetPtype() string {
	if x != nil {
		return x.Ptype
	}
	return ""
}

func (x *PolicyReq) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PolicyReq) GetRule() []string {
	if x != nil {
		return x.Rule
	}
	return nil
}

type RuleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule []string `protobuf:"bytes,1,rep,name=Rule,proto3" json:"Rule,omitempty"`
}

func (x *RuleResp) Reset() {
	*x = RuleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleResp) ProtoMessage() {}

func (x *RuleResp) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleResp.ProtoReflect.Descriptor instead.
func (*RuleResp) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{56}
}

func (x *RuleResp) GetRule() []string {
	if x != nil {
		return x.Rule
	}
	return nil
}

type RulesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*PolicyReq `protobuf:"bytes,1,rep,name=Rules,proto3" json:"Rules,omitempty"`
}

func (x *RulesReq) Reset() {
	*x = RulesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RulesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RulesReq) ProtoMessage() {}

func (x *RulesReq) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RulesReq.ProtoReflect.Descriptor instead.
func (*RulesReq) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{57}
}

func (x *RulesReq) GetRules() []*PolicyReq {
	if x != nil {
		return x.Rules
	}
	return nil
}

type BoolRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res bool `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
}

func (x *BoolRep) Reset() {
	*x = BoolRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolRep) ProtoMessage() {}

func (x *BoolRep) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolRep.ProtoReflect.Descriptor instead.
func (*BoolRep) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{58}
}

func (x *BoolRep) GetRes() bool {
	if x != nil {
		return x.Res
	}
	return false
}

type MenusListResp_MenuMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	CurrentActiveMenu string `protobuf:"bytes,2,opt,name=CurrentActiveMenu,proto3" json:"CurrentActiveMenu,omitempty"`
	HideMenu          bool   `protobuf:"varint,3,opt,name=HideMenu,proto3" json:"HideMenu,omitempty"`
	Icon              string `protobuf:"bytes,4,opt,name=Icon,proto3" json:"Icon,omitempty"`
	OrderNo           int64  `protobuf:"varint,5,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
	IgnoreKeepAlive   bool   `protobuf:"varint,6,opt,name=IgnoreKeepAlive,proto3" json:"IgnoreKeepAlive,omitempty"`
	FrameSrc          string `protobuf:"bytes,7,opt,name=FrameSrc,proto3" json:"FrameSrc,omitempty"`
	IgnoreRoute       bool   `protobuf:"varint,8,opt,name=IgnoreRoute,proto3" json:"IgnoreRoute,omitempty"`
}

func (x *MenusListResp_MenuMeta) Reset() {
	*x = MenusListResp_MenuMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_koala_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenusListResp_MenuMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenusListResp_MenuMeta) ProtoMessage() {}

func (x *MenusListResp_MenuMeta) ProtoReflect() protoreflect.Message {
	mi := &file_koala_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenusListResp_MenuMeta.ProtoReflect.Descriptor instead.
func (*MenusListResp_MenuMeta) Descriptor() ([]byte, []int) {
	return file_koala_proto_rawDescGZIP(), []int{35, 0}
}

func (x *MenusListResp_MenuMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenusListResp_MenuMeta) GetCurrentActiveMenu() string {
	if x != nil {
		return x.CurrentActiveMenu
	}
	return ""
}

func (x *MenusListResp_MenuMeta) GetHideMenu() bool {
	if x != nil {
		return x.HideMenu
	}
	return false
}

func (x *MenusListResp_MenuMeta) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenusListResp_MenuMeta) GetOrderNo() int64 {
	if x != nil {
		return x.OrderNo
	}
	return 0
}

func (x *MenusListResp_MenuMeta) GetIgnoreKeepAlive() bool {
	if x != nil {
		return x.IgnoreKeepAlive
	}
	return false
}

func (x *MenusListResp_MenuMeta) GetFrameSrc() string {
	if x != nil {
		return x.FrameSrc
	}
	return ""
}

func (x *MenusListResp_MenuMeta) GetIgnoreRoute() bool {
	if x != nil {
		return x.IgnoreRoute
	}
	return false
}

var File_koala_proto protoreflect.FileDescriptor

var file_koala_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6b,
	0x6f, 0x61, 0x6c, 0x61, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x22, 0x0b, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1e, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x33, 0x0a,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x6f, 0x6d, 0x22, 0x29, 0x0a, 0x05, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x6d, 0x22, 0x1b, 0x0a,
	0x07, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x08, 0x50, 0x65,
	0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x22, 0x29, 0x0a, 0x09,
	0x50, 0x65, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x72,
	0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65,
	0x72, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8e, 0x03, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55,
	0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x22, 0x46, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x22, 0xc3,
	0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x55, 0x72, 0x6c, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xf4, 0x02, 0x0a, 0x18, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x79, 0x73,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xaf, 0x03, 0x0a, 0x17, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x18,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61,
	0x2e, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbf, 0x02, 0x0a, 0x07, 0x44, 0x65,
	0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65,
	0x70, 0x74, 0x52, 0x65, 0x71, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x0c,
	0x44, 0x65, 0x70, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70,
	0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x54, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x54, 0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x0c, 0x44,
	0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c,
	0x61, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0xa0, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb1, 0x02, 0x0a, 0x07,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x2a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22,
	0xbc, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x6e, 0x54, 0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xa4,
	0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x80, 0x02, 0x0a, 0x06, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72,
	0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x69,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x6c, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x0b, 0x41,
	0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61,
	0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0xa0, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x22, 0xbb, 0x04, 0x0a, 0x07, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x49, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x49, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x2c, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x2a,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71,
	0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x22, 0x31, 0x0a, 0x09, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a,
	0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b,
	0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x52, 0x05, 0x6d, 0x65,
	0x6e, 0x75, 0x73, 0x22, 0x3b, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73,
	0x22, 0x9b, 0x04, 0x0a, 0x0d, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x4d, 0x65, 0x6e,
	0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x08, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x6f,
	0x61, 0x6c, 0x61, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x1a, 0x80, 0x02, 0x0a, 0x08,
	0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1a, 0x0a, 0x08,
	0x48, 0x69, 0x64, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x48, 0x69, 0x64, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63, 0x12, 0x20, 0x0a, 0x0b,
	0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0xf0,
	0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0xb2, 0x02, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x67,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x6c, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x6c, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x44, 0x65, 0x70, 0x74, 0x49, 0x64, 0x73,
	0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x67,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x6f, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x6c,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x65, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x4e, 0x65, 0x77, 0x22, 0x46, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x9b, 0x02, 0x0a, 0x0b,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x75, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x22, 0x7a, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x70,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x70, 0x6f, 0x73, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x70,
	0x74, 0x52, 0x65, 0x71, 0x52, 0x04, 0x64, 0x65, 0x70, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x6f,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b,
	0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6f, 0x62, 0x6a, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x61, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x52,
	0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6f, 0x62, 0x6a, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x52, 0x05, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x22, 0xf3, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x50, 0x65,
	0x72, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x50, 0x65,
	0x72, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x0a, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x70, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x70, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x22,
	0x30, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x6f, 0x6d, 0x49,
	0x64, 0x22, 0x4b, 0x0a, 0x09, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x50, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x75,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x1e,
	0x0a, 0x08, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x32,
	0x0a, 0x08, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x05, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c,
	0x61, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x52, 0x05, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x22, 0x1b, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x72, 0x65, 0x73, 0x32,
	0xd7, 0x01, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a,
	0x07, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61,
	0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x6b, 0x6f, 0x61,
	0x6c, 0x61, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x12, 0x2f, 0x0a, 0x0c, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x6b, 0x6f, 0x61,
	0x6c, 0x61, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x6b, 0x6f,
	0x61, 0x6c, 0x61, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x12, 0x3c, 0x0a, 0x0f, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x19,
	0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x73,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c,
	0x61, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x6f, 0x6c,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c,
	0x61, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x32, 0xd0, 0x04, 0x0a, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x11, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c,
	0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x11, 0x2e, 0x6b,
	0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x35, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x2e, 0x6b, 0x6f, 0x61, 0x6c,
	0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x12, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x09, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x6b, 0x6f, 0x61, 0x6c,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x2e, 0x6b, 0x6f, 0x61, 0x6c,
	0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0xc8, 0x03, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e,
	0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x79,
	0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x79,
	0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x55, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x79, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x32, 0xbe, 0x02, 0x0a, 0x04, 0x4d, 0x65, 0x6e, 0x75,
	0x12, 0x2e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e,
	0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x10,
	0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e,
	0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x10,
	0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x32, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x12,
	0x11, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x54,
	0x72, 0x65, 0x65, 0x12, 0x13, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x2e,
	0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x46, 0x6f,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x50,
	0x65, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x32, 0xcf, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x31, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x11, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x13, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0xcf, 0x01, 0x0a, 0x04, 0x44,
	0x65, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x74, 0x12, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x74, 0x12, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x74, 0x12, 0x11, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x70, 0x74, 0x12, 0x13, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e,
	0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0xcf, 0x01, 0x0a,
	0x04, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6b, 0x6f, 0x61, 0x6c,
	0x61, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32, 0xc6,
	0x01, 0x0a, 0x03, 0x41, 0x70, 0x69, 0x12, 0x2c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x69, 0x12, 0x0d, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x12, 0x0d, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x69, 0x12,
	0x11, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x12,
	0x12, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6b, 0x6f, 0x61, 0x6c, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_koala_proto_rawDescOnce sync.Once
	file_koala_proto_rawDescData = file_koala_proto_rawDesc
)

func file_koala_proto_rawDescGZIP() []byte {
	file_koala_proto_rawDescOnce.Do(func() {
		file_koala_proto_rawDescData = protoimpl.X.CompressGZIP(file_koala_proto_rawDescData)
	})
	return file_koala_proto_rawDescData
}

var file_koala_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_koala_proto_goTypes = []interface{}{
	(*EmptyReq)(nil),                 // 0: koala.EmptyReq
	(*EmptyResp)(nil),                // 1: koala.EmptyResp
	(*DeletesReq)(nil),               // 2: koala.DeletesReq
	(*UserReq)(nil),                  // 3: koala.UserReq
	(*IdReq)(nil),                    // 4: koala.IdReq
	(*IdsResp)(nil),                  // 5: koala.IdsResp
	(*PermsReq)(nil),                 // 6: koala.PermsReq
	(*PermsResp)(nil),                // 7: koala.PermsResp
	(*SysApplicationView)(nil),       // 8: koala.SysApplicationView
	(*CreateSysApplicationReq)(nil),  // 9: koala.CreateSysApplicationReq
	(*CreateSysApplicationResp)(nil), // 10: koala.CreateSysApplicationResp
	(*UpdateSysApplicationReq)(nil),  // 11: koala.UpdateSysApplicationReq
	(*UpdateSysApplicationResp)(nil), // 12: koala.UpdateSysApplicationResp
	(*DeleteSysApplicationReq)(nil),  // 13: koala.DeleteSysApplicationReq
	(*DeleteSysApplicationResp)(nil), // 14: koala.DeleteSysApplicationResp
	(*DetailSysApplicationReq)(nil),  // 15: koala.DetailSysApplicationReq
	(*DetailSysApplicationResp)(nil), // 16: koala.DetailSysApplicationResp
	(*SearchSysApplicationReq)(nil),  // 17: koala.SearchSysApplicationReq
	(*SearchSysApplicationResp)(nil), // 18: koala.SearchSysApplicationResp
	(*DeptReq)(nil),                  // 19: koala.DeptReq
	(*DeptQueryReq)(nil),             // 20: koala.DeptQueryReq
	(*DeptListResp)(nil),             // 21: koala.DeptListResp
	(*PostReq)(nil),                  // 22: koala.PostReq
	(*PostQueryReq)(nil),             // 23: koala.PostQueryReq
	(*PostListResp)(nil),             // 24: koala.PostListResp
	(*RoleReq)(nil),                  // 25: koala.RoleReq
	(*RoleQueryReq)(nil),             // 26: koala.RoleQueryReq
	(*RoleListResp)(nil),             // 27: koala.RoleListResp
	(*ApiReq)(nil),                   // 28: koala.ApiReq
	(*ApiQueryReq)(nil),              // 29: koala.ApiQueryReq
	(*ApiListResp)(nil),              // 30: koala.ApiListResp
	(*MenuQueryReq)(nil),             // 31: koala.MenuQueryReq
	(*MenuReq)(nil),                  // 32: koala.MenuReq
	(*MenusResp)(nil),                // 33: koala.MenusResp
	(*UserMenusResp)(nil),            // 34: koala.UserMenusResp
	(*MenusListResp)(nil),            // 35: koala.MenusListResp
	(*User)(nil),                     // 36: koala.User
	(*AccountReq)(nil),               // 37: koala.AccountReq
	(*AccountQueryReq)(nil),          // 38: koala.AccountQueryReq
	(*AccountListResp)(nil),          // 39: koala.AccountListResp
	(*UpdatePasswordReq)(nil),        // 40: koala.UpdatePasswordReq
	(*ResetPasswordReq)(nil),         // 41: koala.ResetPasswordReq
	(*RegisterReq)(nil),              // 42: koala.RegisterReq
	(*RegisterResp)(nil),             // 43: koala.RegisterResp
	(*LoginReq)(nil),                 // 44: koala.LoginReq
	(*LoginResp)(nil),                // 45: koala.LoginResp
	(*GetUserInfoReq)(nil),           // 46: koala.GetUserInfoReq
	(*GetUserInfoResp)(nil),          // 47: koala.GetUserInfoResp
	(*GenerateTokenReq)(nil),         // 48: koala.GenerateTokenReq
	(*GenerateTokenResp)(nil),        // 49: koala.GenerateTokenResp
	(*UserPermsVerifyReq)(nil),       // 50: koala.UserPermsVerifyReq
	(*RoleBindReq)(nil),              // 51: koala.RoleBindReq
	(*RolePermission)(nil),           // 52: koala.RolePermission
	(*Permission)(nil),               // 53: koala.Permission
	(*QueryReq)(nil),                 // 54: koala.QueryReq
	(*PolicyReq)(nil),                // 55: koala.PolicyReq
	(*RuleResp)(nil),                 // 56: koala.RuleResp
	(*RulesReq)(nil),                 // 57: koala.RulesReq
	(*BoolRep)(nil),                  // 58: koala.BoolRep
	(*MenusListResp_MenuMeta)(nil),   // 59: koala.MenusListResp.MenuMeta
}
var file_koala_proto_depIdxs = []int32{
	8,  // 0: koala.SearchSysApplicationResp.list:type_name -> koala.SysApplicationView
	19, // 1: koala.DeptReq.Children:type_name -> koala.DeptReq
	19, // 2: koala.DeptListResp.list:type_name -> koala.DeptReq
	25, // 3: koala.PostListResp.list:type_name -> koala.RoleReq
	25, // 4: koala.RoleReq.children:type_name -> koala.RoleReq
	25, // 5: koala.RoleListResp.list:type_name -> koala.RoleReq
	28, // 6: koala.ApiListResp.list:type_name -> koala.ApiReq
	32, // 7: koala.MenuReq.children:type_name -> koala.MenuReq
	32, // 8: koala.MenusResp.menus:type_name -> koala.MenuReq
	35, // 9: koala.UserMenusResp.menus:type_name -> koala.MenusListResp
	59, // 10: koala.MenusListResp.Meta:type_name -> koala.MenusListResp.MenuMeta
	35, // 11: koala.MenusListResp.Children:type_name -> koala.MenusListResp
	47, // 12: koala.AccountListResp.list:type_name -> koala.GetUserInfoResp
	37, // 13: koala.GetUserInfoResp.user:type_name -> koala.AccountReq
	19, // 14: koala.GetUserInfoResp.dept:type_name -> koala.DeptReq
	22, // 15: koala.GetUserInfoResp.post:type_name -> koala.PostReq
	52, // 16: koala.GetUserInfoResp.role:type_name -> koala.RolePermission
	50, // 17: koala.UserPermsVerifyReq.batch:type_name -> koala.UserPermsVerifyReq
	51, // 18: koala.RoleBindReq.batch:type_name -> koala.RoleBindReq
	53, // 19: koala.RolePermission.permissions:type_name -> koala.Permission
	55, // 20: koala.RulesReq.Rules:type_name -> koala.PolicyReq
	55, // 21: koala.Authority.Enforce:input_type -> koala.PolicyReq
	57, // 22: koala.Authority.BatchEnforce:input_type -> koala.RulesReq
	50, // 23: koala.Authority.UserPermsVerify:input_type -> koala.UserPermsVerifyReq
	51, // 24: koala.Authority.RoleBind:input_type -> koala.RoleBindReq
	37, // 25: koala.Account.CreateAccount:input_type -> koala.AccountReq
	37, // 26: koala.Account.UpdateAccount:input_type -> koala.AccountReq
	2,  // 27: koala.Account.DeleteAccounts:input_type -> koala.DeletesReq
	38, // 28: koala.Account.PageAccount:input_type -> koala.AccountQueryReq
	40, // 29: koala.Account.UpdatePassword:input_type -> koala.UpdatePasswordReq
	41, // 30: koala.Account.ResetPassword:input_type -> koala.ResetPasswordReq
	42, // 31: koala.Account.RegisterUser:input_type -> koala.RegisterReq
	44, // 32: koala.Account.LoginUser:input_type -> koala.LoginReq
	46, // 33: koala.Account.getUserInfo:input_type -> koala.GetUserInfoReq
	48, // 34: koala.Account.generateToken:input_type -> koala.GenerateTokenReq
	9,  // 35: koala.Application.CreateSysApplication:input_type -> koala.CreateSysApplicationReq
	11, // 36: koala.Application.UpdateSysApplication:input_type -> koala.UpdateSysApplicationReq
	13, // 37: koala.Application.DeleteSysApplication:input_type -> koala.DeleteSysApplicationReq
	15, // 38: koala.Application.DetailSysApplication:input_type -> koala.DetailSysApplicationReq
	17, // 39: koala.Application.PageSysApplication:input_type -> koala.SearchSysApplicationReq
	32, // 40: koala.Menu.CreateMenu:input_type -> koala.MenuReq
	32, // 41: koala.Menu.UpdateMenu:input_type -> koala.MenuReq
	2,  // 42: koala.Menu.DeleteMenus:input_type -> koala.DeletesReq
	31, // 43: koala.Menu.GetMenuTree:input_type -> koala.MenuQueryReq
	3,  // 44: koala.Menu.GetUserMenuList:input_type -> koala.UserReq
	6,  // 45: koala.Menu.GetMenuForRole:input_type -> koala.PermsReq
	25, // 46: koala.Role.CreateRole:input_type -> koala.RoleReq
	25, // 47: koala.Role.UpdateRole:input_type -> koala.RoleReq
	2,  // 48: koala.Role.DeleteRole:input_type -> koala.DeletesReq
	26, // 49: koala.Role.PageRole:input_type -> koala.RoleQueryReq
	19, // 50: koala.Dept.CreateDept:input_type -> koala.DeptReq
	19, // 51: koala.Dept.UpdateDept:input_type -> koala.DeptReq
	2,  // 52: koala.Dept.DeleteDept:input_type -> koala.DeletesReq
	20, // 53: koala.Dept.PageDept:input_type -> koala.DeptQueryReq
	22, // 54: koala.Post.CreatePost:input_type -> koala.PostReq
	22, // 55: koala.Post.UpdatePost:input_type -> koala.PostReq
	2,  // 56: koala.Post.DeletePost:input_type -> koala.DeletesReq
	23, // 57: koala.Post.PagePost:input_type -> koala.PostQueryReq
	28, // 58: koala.Api.CreateApi:input_type -> koala.ApiReq
	28, // 59: koala.Api.UpdateApi:input_type -> koala.ApiReq
	2,  // 60: koala.Api.DeleteApi:input_type -> koala.DeletesReq
	29, // 61: koala.Api.PageApi:input_type -> koala.ApiQueryReq
	58, // 62: koala.Authority.Enforce:output_type -> koala.BoolRep
	58, // 63: koala.Authority.BatchEnforce:output_type -> koala.BoolRep
	58, // 64: koala.Authority.UserPermsVerify:output_type -> koala.BoolRep
	58, // 65: koala.Authority.RoleBind:output_type -> koala.BoolRep
	1,  // 66: koala.Account.CreateAccount:output_type -> koala.EmptyResp
	1,  // 67: koala.Account.UpdateAccount:output_type -> koala.EmptyResp
	1,  // 68: koala.Account.DeleteAccounts:output_type -> koala.EmptyResp
	39, // 69: koala.Account.PageAccount:output_type -> koala.AccountListResp
	1,  // 70: koala.Account.UpdatePassword:output_type -> koala.EmptyResp
	1,  // 71: koala.Account.ResetPassword:output_type -> koala.EmptyResp
	43, // 72: koala.Account.RegisterUser:output_type -> koala.RegisterResp
	45, // 73: koala.Account.LoginUser:output_type -> koala.LoginResp
	47, // 74: koala.Account.getUserInfo:output_type -> koala.GetUserInfoResp
	49, // 75: koala.Account.generateToken:output_type -> koala.GenerateTokenResp
	10, // 76: koala.Application.CreateSysApplication:output_type -> koala.CreateSysApplicationResp
	12, // 77: koala.Application.UpdateSysApplication:output_type -> koala.UpdateSysApplicationResp
	14, // 78: koala.Application.DeleteSysApplication:output_type -> koala.DeleteSysApplicationResp
	16, // 79: koala.Application.DetailSysApplication:output_type -> koala.DetailSysApplicationResp
	18, // 80: koala.Application.PageSysApplication:output_type -> koala.SearchSysApplicationResp
	1,  // 81: koala.Menu.CreateMenu:output_type -> koala.EmptyResp
	1,  // 82: koala.Menu.UpdateMenu:output_type -> koala.EmptyResp
	1,  // 83: koala.Menu.DeleteMenus:output_type -> koala.EmptyResp
	33, // 84: koala.Menu.GetMenuTree:output_type -> koala.MenusResp
	34, // 85: koala.Menu.GetUserMenuList:output_type -> koala.UserMenusResp
	7,  // 86: koala.Menu.GetMenuForRole:output_type -> koala.PermsResp
	1,  // 87: koala.Role.CreateRole:output_type -> koala.EmptyResp
	1,  // 88: koala.Role.UpdateRole:output_type -> koala.EmptyResp
	1,  // 89: koala.Role.DeleteRole:output_type -> koala.EmptyResp
	27, // 90: koala.Role.PageRole:output_type -> koala.RoleListResp
	1,  // 91: koala.Dept.CreateDept:output_type -> koala.EmptyResp
	1,  // 92: koala.Dept.UpdateDept:output_type -> koala.EmptyResp
	1,  // 93: koala.Dept.DeleteDept:output_type -> koala.EmptyResp
	21, // 94: koala.Dept.PageDept:output_type -> koala.DeptListResp
	1,  // 95: koala.Post.CreatePost:output_type -> koala.EmptyResp
	1,  // 96: koala.Post.UpdatePost:output_type -> koala.EmptyResp
	1,  // 97: koala.Post.DeletePost:output_type -> koala.EmptyResp
	24, // 98: koala.Post.PagePost:output_type -> koala.PostListResp
	1,  // 99: koala.Api.CreateApi:output_type -> koala.EmptyResp
	1,  // 100: koala.Api.UpdateApi:output_type -> koala.EmptyResp
	1,  // 101: koala.Api.DeleteApi:output_type -> koala.EmptyResp
	30, // 102: koala.Api.PageApi:output_type -> koala.ApiListResp
	62, // [62:103] is the sub-list for method output_type
	21, // [21:62] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_koala_proto_init() }
func file_koala_proto_init() {
	if File_koala_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_koala_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysApplicationView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSysApplicationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSysApplicationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSysApplicationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSysApplicationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysApplicationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysApplicationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailSysApplicationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailSysApplicationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSysApplicationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSysApplicationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMenusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenusListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermsVerifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBindReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RolePermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RulesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_koala_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenusListResp_MenuMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_koala_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   8,
		},
		GoTypes:           file_koala_proto_goTypes,
		DependencyIndexes: file_koala_proto_depIdxs,
		MessageInfos:      file_koala_proto_msgTypes,
	}.Build()
	File_koala_proto = out.File
	file_koala_proto_rawDesc = nil
	file_koala_proto_goTypes = nil
	file_koala_proto_depIdxs = nil
}
